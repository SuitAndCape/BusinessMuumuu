# [<FLAG>]<TYPE>(<SCOPE>): <SUBJECT>
#
# <BREAKDOWN>
#
# <ISSUE>

##== SuitAndCape Commit Template Description ======================^===^=======#
##                                                               68^ 72^

## Git Commit Message formatting rules...
##   - Write in an impertivite tone
##   - The Subject line is required
##   - Limit the length of the Subject line to 68 characters
##   - Capitalize the first letter of the Subject line description
##   - Do not include a closing punctuation mark in the Subject line description
##   - Separate each section with a newline
##   - Only use the Breakdown and Issue sections when necessary
##   - Limit the length of Breakdown and Issue sections to 72 characters
##   - Write the Breakdown section as a paragraph and/or bullet-pointed list
##     + Follow the [`-`, `+`, `*`] tree-order when using bullet-points
##       * Two character indentation for `+`, four character indentation for `*`
##   - Basic markup formatting in the Breakdown section is allowed
#
## [<FLAG>]<TYPE>(<SCOPE>): <SUBJECT> content...
##   - <FLAG> values (when necessary)...
##     + `!!!` – something works differently; must make and document a fix
##     + `SEC` – change fixes a security issue; Security Team tag
##     + `WIP` – feature branch is a work in progress
##   - <TYPE> values...
##     + `clean` – update or maintainance; production not affected
##     + `docs`  – documentation changes; production not affected
##     + `feat`  – new feature
##     + `fix`   – correct a bug in the program
##     + `host`  – upload files for storage or access
##     + `init`  – initialize a repo or branch
##     + `move`  – move, modularize, or rearrange files
##     + `ref`   – refactor/optimize production code/functionality
##     + `rem`   – remove production code/functionality
##     + `style` – formatting changes; production not affected
##     + `supp`  – support tool update or maintainance; production not affected
##     + `test`  – add new or refactor existing tests; production not affected
##     + `tweak` – add to or change an existing behavior
##     + `misc`  – anything not covered; use rarely
##   - <SCOPE> values...
##     + Keyword specifying the scope of change [`v1.1`, `view`, `README`, etc.]
##   - <SUBJECT> content...
##     + Succinct description of change
#
## <BREAKDOWN> content (when necessary)...
##   - Explain the changes and motivations behind them; the "what" and the "why"
#
## <ISSUE> content (when necessary)...
##   - Issue type [`Closes`, `Fixes`, `Opens`, `Refs`] and number(s)
##   - If needed, `BREAKS:` and description, justification, and migration notes

## STRUCTURE:
# [<FLAG>]<TYPE>(<SCOPE>): <SUBJECT>
#
# <BREAKDOWN>
#
# <ISSUE>

## EXAMPLE:
# clean(git_commit_template): Add git commit example to template
#
# Update .git_commit_template, create git commit message example for
# clarity, pet kitty no more than three times, put on a suit & cape,
# modify README, add optional bullet-points, and change text appearance.
# - Adjust headlines
#   + h1, h2, h6
#     * Change responsive sizes, for a better mobile experience
#     * Match fonts (Futura), for consistency
#   + Attach icon to h3, to represent links
# - Decrease p font-size, to differentiate paragraphs from headlines
#
# Refs #1, #4, & #17
# Fixes #21 & #24
# BREAKS: The cat no longer enjoys belly rubs, admin must only pet kitty
# behind the ears

## @source https://github.com/SuitAndCape/BusinessMuumuu/blob/master/copy/.git_commit_template
## @based-on https://github.com/sparkbox/how_to/tree/master/style/git
## @modifier Ali Esmaili
